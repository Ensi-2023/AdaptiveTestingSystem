<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AdaptiveTestingSystem.Control.Themes">
   
    
    <Style  TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultTextForegroud}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">

                        <Border CornerRadius="3" x:Name="markGrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <ContentPresenter Margin="8" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="markGrid" Value="{DynamicResource RadioButtonMouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="markGrid" Value="{DynamicResource RadioButtonDisableColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="markGrid" Value="{DynamicResource RadioButtonPressedColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="markGrid" Value="1"/>
                            <Setter Property="Background" TargetName="markGrid" Value="{DynamicResource RadioButtonChekedColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="markGrid" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type local:CustomCheckBox}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource BorderColor}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultTextForegroud}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomCheckBox}">
                    <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">

                        <Border CornerRadius="3" x:Name="markGrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <ContentPresenter Margin="8" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>


                        <EventTrigger RoutedEvent="Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="templateRoot" Storyboard.TargetProperty="Margin" Duration="00:00:00.6" From="500,0,0,0" To="0">
                                            <ThicknessAnimation.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" Power="7"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                        <DoubleAnimation Storyboard.TargetName="templateRoot" Storyboard.TargetProperty="Opacity" Duration="00:00:00.2" From="0" To="1"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>


                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="markGrid" Value="{DynamicResource RadioButtonMouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="markGrid" Value="{DynamicResource RadioButtonDisableColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="markGrid" Value="{DynamicResource RadioButtonPressedColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="markGrid" Value="1"/>
                            <Setter Property="Background" TargetName="markGrid" Value="{DynamicResource RadioButtonChekedColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="markGrid" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>